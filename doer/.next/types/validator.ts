// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/auth/signup/page.tsx
{
  const handler = {} as typeof import("../../src/app/auth/signup/page.js")
  handler satisfies AppPageConfig<"/auth/signup">
}

// Validate ../../src/app/community/page.tsx
{
  const handler = {} as typeof import("../../src/app/community/page.js")
  handler satisfies AppPageConfig<"/community">
}

// Validate ../../src/app/dashboard/page.tsx
{
  const handler = {} as typeof import("../../src/app/dashboard/page.js")
  handler satisfies AppPageConfig<"/dashboard">
}

// Validate ../../src/app/datareset/page.tsx
{
  const handler = {} as typeof import("../../src/app/datareset/page.js")
  handler satisfies AppPageConfig<"/datareset">
}

// Validate ../../src/app/health/page.tsx
{
  const handler = {} as typeof import("../../src/app/health/page.js")
  handler satisfies AppPageConfig<"/health">
}

// Validate ../../src/app/help/page.tsx
{
  const handler = {} as typeof import("../../src/app/help/page.js")
  handler satisfies AppPageConfig<"/help">
}

// Validate ../../src/app/login/page.tsx
{
  const handler = {} as typeof import("../../src/app/login/page.js")
  handler satisfies AppPageConfig<"/login">
}

// Validate ../../src/app/media/page.tsx
{
  const handler = {} as typeof import("../../src/app/media/page.js")
  handler satisfies AppPageConfig<"/media">
}

// Validate ../../src/app/onboarding/complete/page.tsx
{
  const handler = {} as typeof import("../../src/app/onboarding/complete/page.js")
  handler satisfies AppPageConfig<"/onboarding/complete">
}

// Validate ../../src/app/onboarding/loading/page.tsx
{
  const handler = {} as typeof import("../../src/app/onboarding/loading/page.js")
  handler satisfies AppPageConfig<"/onboarding/loading">
}

// Validate ../../src/app/onboarding/manual/milestones/page.tsx
{
  const handler = {} as typeof import("../../src/app/onboarding/manual/milestones/page.js")
  handler satisfies AppPageConfig<"/onboarding/manual/milestones">
}

// Validate ../../src/app/onboarding/manual/page.tsx
{
  const handler = {} as typeof import("../../src/app/onboarding/manual/page.js")
  handler satisfies AppPageConfig<"/onboarding/manual">
}

// Validate ../../src/app/onboarding/page.tsx
{
  const handler = {} as typeof import("../../src/app/onboarding/page.js")
  handler satisfies AppPageConfig<"/onboarding">
}

// Validate ../../src/app/onboarding/review/page.tsx
{
  const handler = {} as typeof import("../../src/app/onboarding/review/page.js")
  handler satisfies AppPageConfig<"/onboarding/review">
}

// Validate ../../src/app/page.tsx
{
  const handler = {} as typeof import("../../src/app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../src/app/roadmap/page.tsx
{
  const handler = {} as typeof import("../../src/app/roadmap/page.js")
  handler satisfies AppPageConfig<"/roadmap">
}

// Validate ../../src/app/settings/page.tsx
{
  const handler = {} as typeof import("../../src/app/settings/page.js")
  handler satisfies AppPageConfig<"/settings">
}

// Validate ../../src/app/api/datareset/route.ts
{
  const handler = {} as typeof import("../../src/app/api/datareset/route.js")
  handler satisfies RouteHandlerConfig<"/api/datareset">
}

// Validate ../../src/app/api/env-check/route.ts
{
  const handler = {} as typeof import("../../src/app/api/env-check/route.js")
  handler satisfies RouteHandlerConfig<"/api/env-check">
}

// Validate ../../src/app/api/plans/archive/route.ts
{
  const handler = {} as typeof import("../../src/app/api/plans/archive/route.js")
  handler satisfies RouteHandlerConfig<"/api/plans/archive">
}

// Validate ../../src/app/api/plans/clarify-second/route.ts
{
  const handler = {} as typeof import("../../src/app/api/plans/clarify-second/route.js")
  handler satisfies RouteHandlerConfig<"/api/plans/clarify-second">
}

// Validate ../../src/app/api/plans/clarify/route.ts
{
  const handler = {} as typeof import("../../src/app/api/plans/clarify/route.js")
  handler satisfies RouteHandlerConfig<"/api/plans/clarify">
}

// Validate ../../src/app/api/plans/delete/route.ts
{
  const handler = {} as typeof import("../../src/app/api/plans/delete/route.js")
  handler satisfies RouteHandlerConfig<"/api/plans/delete">
}

// Validate ../../src/app/api/plans/generate/route.ts
{
  const handler = {} as typeof import("../../src/app/api/plans/generate/route.js")
  handler satisfies RouteHandlerConfig<"/api/plans/generate">
}

// Validate ../../src/app/api/plans/list/route.ts
{
  const handler = {} as typeof import("../../src/app/api/plans/list/route.js")
  handler satisfies RouteHandlerConfig<"/api/plans/list">
}

// Validate ../../src/app/api/plans/manual/milestones/route.ts
{
  const handler = {} as typeof import("../../src/app/api/plans/manual/milestones/route.js")
  handler satisfies RouteHandlerConfig<"/api/plans/manual/milestones">
}

// Validate ../../src/app/api/plans/manual/route.ts
{
  const handler = {} as typeof import("../../src/app/api/plans/manual/route.js")
  handler satisfies RouteHandlerConfig<"/api/plans/manual">
}

// Validate ../../src/app/api/plans/manual/tasks/route.ts
{
  const handler = {} as typeof import("../../src/app/api/plans/manual/tasks/route.js")
  handler satisfies RouteHandlerConfig<"/api/plans/manual/tasks">
}

// Validate ../../src/app/api/plans/switch/route.ts
{
  const handler = {} as typeof import("../../src/app/api/plans/switch/route.js")
  handler satisfies RouteHandlerConfig<"/api/plans/switch">
}

// Validate ../../src/app/api/plans/validate/route.ts
{
  const handler = {} as typeof import("../../src/app/api/plans/validate/route.js")
  handler satisfies RouteHandlerConfig<"/api/plans/validate">
}

// Validate ../../src/app/api/profile/route.ts
{
  const handler = {} as typeof import("../../src/app/api/profile/route.js")
  handler satisfies RouteHandlerConfig<"/api/profile">
}

// Validate ../../src/app/api/settings/delete-account/route.ts
{
  const handler = {} as typeof import("../../src/app/api/settings/delete-account/route.js")
  handler satisfies RouteHandlerConfig<"/api/settings/delete-account">
}

// Validate ../../src/app/api/settings/password/route.ts
{
  const handler = {} as typeof import("../../src/app/api/settings/password/route.js")
  handler satisfies RouteHandlerConfig<"/api/settings/password">
}

// Validate ../../src/app/auth/callback/route.ts
{
  const handler = {} as typeof import("../../src/app/auth/callback/route.js")
  handler satisfies RouteHandlerConfig<"/auth/callback">
}





// Validate ../../src/app/layout.tsx
{
  const handler = {} as typeof import("../../src/app/layout.js")
  handler satisfies LayoutConfig<"/">
}
